#!/usr/bin/python2

import sys
import os
import pwd
from commands import getstatusoutput, getoutput

sys.dont_write_bytecode = True

from gui_gtk import *

def install(self):
    gtk.main()

# gksu/gksudo deprecated in Ubuntu Saucy (13.10), but the Installer requires it
find_distro = "cat /etc/issue"
distro_raw = getstatusoutput(find_distro)
distro = (distro_raw[1].split(' '))[0]
version = (distro_raw[1].split(' '))[1]
major_version = (version).split('.')[0] + "." + (version).split('.')[1]
if (distro == "Ubuntu") and (float(major_version) >= 13.04):
    gksu_installed = os.path.exists("/usr/bin/gksudo")
    unity_installed = os.path.exists("/usr/bin/unity")
    # python-appindicator probably left out by mistake not policy, so deal
    # with it here rather than in the Installer
    py_appind_pkg = getoutput("dpkg -s python-appindicator")
    py_appind_pkg_installed = ((py_appind_pkg.split("\n"))[1].split())[3]
    if gksu_installed:
        if unity_installed:
            if py_appind_pkg_installed == "installed":
                print "Both the gksu and python-appindicator packages are installed."
            else:
                get_pkg = getoutput("software-center python-appindicator")
        else:
            print "No Unity Desktop so python-appindicator not needed and gksu installed."
    else:
        if unity_installed:
            if py_appind_pkg_installed == "installed":
                get_pkg = getoutput("software-center gksu")
            else:
                get_pkg = getoutput("software-center gksu,python-appindicator")
        else:
            # "No Unity Desktop so python-appindicator not needed."
            get_pkg = getoutput("software-center gksu")

class autostart:
    def __init__(self):
        pass

    def add_autostart(self):
        # installing - so use /usr/share path in magick-rotation.desktop
        autostart_desktop="""
[Desktop Entry]
Type=Application
Categories=System;Utility;
Name=Magick Rotation for tablet PC's
Exec=/usr/share/magick-rotation/magick-rotation
Comment=Tablet PC automatic rotation
Icon=/usr/share/magick-rotation/MagickIcons/magick-rotation-enabled.png
Path=/usr/share/magick-rotation/
"""
        autostart_dsktop_path = "~/.config/autostart/magick-rotation.desktop"

        if not os.path.isdir(os.path.expanduser('~')+"/.config/autostart/"):
            os.mkdir(os.path.expanduser('~')+"/.config/autostart/")

        # Gnome Shell installed check, needed due to the Gnome Shell 3.4 autostart bug
        if os.path.exists("/usr/bin/gnome-shell"):
            gshell_str = getoutput("gnome-shell --version")  # e.g. string:  GNOME Shell 3.4.1
            gshell_ver = gshell_str.split(' ')[2]            # yields 3.4.1
            gshell_subver = int((gshell_ver.split('.'))[1])  # yields 4
            if gshell_subver >= 4:
                wr = open(os.path.expanduser(autostart_dsktop_path), "w")
                # append the Gnome Shell 3.4 bug work around
                wr.write(autostart_desktop + "X-GNOME-Autostart-Delay=3")
            else:
                wr = open(os.path.expanduser(autostart_dsktop_path), "w")
                wr.write(autostart_desktop)
        # Gnome Shell not installed
        else:
            wr = open(os.path.expanduser(autostart_dsktop_path), "w")
            wr.write(autostart_desktop)
        wr.close()

if __name__ == "__main__":
    path = "."
    if sys.argv:
        path = os.path.dirname(sys.argv[0])
        if not path:
            path = "."

    command = "stat /usr/bin/gksudo"
    is_gksudo = getstatusoutput(command) [0]
    if is_gksudo == 0:
       sudo = "gksudo "
       
    command = "stat /usr/bin/gksu"
    is_gksu = getstatusoutput(command) [0]
    if is_gksu == 0:
       sudo = "gksu "

    command = "stat /usr/bin/kdesudo"
    is_kdesudo = getstatusoutput(command)[0]
    if is_kdesudo == 0:
        sudo = "kdesudo -c "

    # for Fedora
    command = "stat /usr/bin/beesu"
    is_beesu = getstatusoutput(command) [0]
    if is_beesu == 0:
        sudo = "beesu "

    # for openSUSE
    command = "stat /usr/bin/kdesu"
    is_kdesu = getstatusoutput(command)[0]
    if is_kdesu == 0:
        sudo = "kdesu -c "

    # use gsettings to add Magick icon to Unity tray whitelist
    # or enable Magick extension in Gnome Shell
    gset = path + "/gset_addkeyval.py"
    val = getstatusoutput(gset)[0]

    usr_for_group = pwd.getpwuid(os.getuid()).pw_name
    # pass username as a command line argument
    command = sudo + "'python " + path + "/installer_gtk.py " + \
              usr_for_group + "'"
    success = getstatusoutput(command)[0]
    start = autostart()
    start.add_autostart()
    sys.exit(success)

    magick_install = install()
    magick_install.run()

##############################################################
##  This program is free software; you can redistribute it  ##
##  and/or modify it under the terms of the GNU General     ##
##  Public license as published by the Free Software        ##
##  Foundation; either version 2 of the License, or (at     ## 
##  your option) any later version.                         ##
##############################################################
